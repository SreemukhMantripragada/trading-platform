global:
  scrape_interval: 5s
  evaluation_interval: 5s
  scrape_timeout: 4s
  external_labels:
    env: local

rule_files:
  - /etc/prometheus/alert.rules.yml

scrape_configs:
  # 1) Prometheus self
  - job_name: prometheus
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: prometheus

  # 2) Application exporters (Python services exposing /metrics via prometheus_client)
  #    NOTE (Docker Desktop on macOS): use host.docker.internal to reach host processes.
  - job_name: apps
    metrics_path: /metrics
    scheme: http
    scrape_timeout: 3s
    static_configs:
      - targets: ['host.docker.internal:8001']
        labels: { service: smoke_producer }
      - targets: ['host.docker.internal:8002']
        labels: { service: ticks_consumer }
      - targets: ['host.docker.internal:8003']
        labels: { service: bar_builder_1s }
      - targets: ['host.docker.internal:8004']
        labels: { service: bar_aggregator_1m }
      - targets: ['host.docker.internal:8005']
        labels: { service: bar_aggregator_multi }
      - targets: ['host.docker.internal:8008']
        labels: { service: zerodha_ws }
      - targets: ['host.docker.internal:8010']
        labels: { service: dlq_consumer }
      - targets: ['host.docker.internal:8011']
        labels: { service: strategy_runner }
      - targets: ['host.docker.internal:8012']
        labels: { service: risk_guard }
      - targets: ['host.docker.internal:8013']
        labels: { service: paper_gateway }
      - targets: ['host.docker.internal:8014']
        labels: { service: matcher_cpp }
      - targets: ['host.docker.internal:8015']
        labels: { service: oms_core }
      - targets: ['host.docker.internal:8016']
        labels: { service: exit_engine }
      - targets: ['host.docker.internal:8017']
        labels: { service: zerodha_gateway_live }
      - targets: ['host.docker.internal:8018']
        labels: { service: oms_lifecycle_exporter }
      - targets: ['host.docker.internal:8019']
        labels: { service: gateway_oms_exporter }
      - targets: ['host.docker.internal:8020']
        labels: { service: pairs_live }
      - targets: ['host.docker.internal:8021']
        labels: { service: pairs_exporter }
      - targets: ['host.docker.internal:8022']
        labels: { service: risk_drawdown_exporter }
      - targets: ['host.docker.internal:8023']
        labels: { service: broker_cash_poller }
      - targets: ['host.docker.internal:8024']
        labels: { service: eod_orchestrator }

  # 3) Kafka metrics (optional) — add a kafka-exporter container that exposes :9308
  - job_name: kafka
    static_configs:
      - targets: ['kafka-exporter:9308']
        labels: { service: kafka_exporter }
    relabel_configs:
      # Keep only if the target resolves; otherwise silently show 'down'
      - action: labelmap
        regex: __meta_.*

  # 4) Node / system (optional) — add a node-exporter container that exposes :9100
  - job_name: node
    static_configs:
      - targets: ['node-exporter:9100']
        labels: { service: node_exporter }
